name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pull-requests: read

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
        
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.txt -covermode=atomic ./...
      
    - name: Upload coverage to Codecov
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      run: |
        # Debug: Check if token is set (will show as [MASKED] in logs)
        echo "Token is set: $([[ -n $CODECOV_TOKEN ]] && echo "yes" || echo "no")"
        
        # Download and execute Codecov script with explicit token and repository slug
        curl -s https://codecov.io/bash > codecov.sh
        chmod +x codecov.sh
        ./codecov.sh -B main -f coverage.txt -Z -r getgrowly/vault-utils

  lint:
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: true
        
    - name: Cache golangci-lint
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/golangci-lint
          ~/.cache/go-build
        key: ${{ runner.os }}-golangci-lint-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-golangci-lint-
        
    - name: golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=5m
        skip-pkg-cache: true
        skip-build-cache: true 